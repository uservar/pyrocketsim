name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build bindings on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-2019", "ubuntu-20.04"]
        python-version: ["3.6"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup requirements (Windows)
        if: matrix.os == 'windows-2019'
        run: |
          pip install numpy
          curl -L -O https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.zip
          tar xfz boost_1_81_0.zip
          cd boost_1_81_0
          ./bootstrap.bat --with-python=python -prefix=${{github.workspace}}/boost
          ./b2 variant=release address-model=64 link=static runtime-link=shared --with-python --build-type=minimal --prefix=${{github.workspace}}/boost install

      - name: Setup requirements (Linux)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          pip install numpy
          curl -L -O https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.gz
          tar xfz boost_1_81_0.tar.gz
          cd boost_1_81_0
          ./bootstrap.sh --with-python=python -prefix=${{github.workspace}}/boost
          ./b2 cxxflags=-fPIC variant=release address-model=64 link=static runtime-link=shared --with-python --build-type=minimal --prefix=${{github.workspace}}/boost install

      - name: Build pyrocketsim
        run: |
          cmake -B ./build -DCMAKE_BUILD_TYPE=Release -DBOOST_ROOT=${{github.workspace}}/boost
          cmake --build ./build --config Release --parallel

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ${{github.workspace}}/build/${{env.BUILD_TYPE}}/*.pyd
            ${{github.workspace}}/build/*.so